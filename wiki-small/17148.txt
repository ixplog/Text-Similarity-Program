In computer jargon, a killer poke is a method of inducing physical hardware damage on a machine and/or its peripherals by the insertion of invalid values, via, for example, BASIC's POKE command, into a memory-mapped control register. The term is typically used to describe a family of fairly well known tricks that can overload the analog electronics in the CRT monitors of computers lacking hardware sanity checking (notable examples being the IBM Portable and Commodore PET.)

1. Specific examples

1.1. The Commodore PET

The PET-specific killer poke is connected to the architecture of that machine's video rasterizer circuits. In early model PETs, writing a certain value to the memory address of a certain I/O register ( POKE 59458,62 ) made the machine able to display text on the screen much faster. When the PET range was revamped with updated hardware, it was quickly discovered that performing the old trick on the new hardware led to disastrous behavior by the new video chip, causing it to destroy the PET's integrated CRT monitor.

1.2. The Commodore 64

The Commodore 64 had an optional external 5-1/4" floppy drive. Although the Commodore 1541 contained a 6502 microprocessor, it was used to translate digital data and magnetic signals back and forth. The drive mechanism itself was 'dumb'; all drive management functions were provided from the computer. The computer's drive control systems were inadequately safeguarded. The drives stored data on 40 tracks (#0-39) and the stepper motor could be manually controlled through BASIC by the POKE command. If the drive was at either end of its range (track 0 or track 39) and it was commanded to continue moving, there was no software or firmware method to prevent drive damage. The problem was exacerbated by copy protection techniques that used non-standard disk formats with unusual track counts.

1.3. TRS-80 Model III

The TRS-80 Model III had the ability to switch between a 32-character-wide display and a 64-character display. Doing so actuated a relay in the video hardware, accomplished by writing to a specific memory-mapped control register. Programs that repeatedly switched between 32 and 64 character modes at high speed (either on purpose or accidentally) could permanently damage the video hardware. While this is not a single "killer poke", it demonstrates a software failure mode that could permanently damage the hardware.

1.4. Cassette Tape Relay

The TRS-80 Color Computer, IBM PC, IBM PCjr, NASCOM, MSX, and BBC Micro from Acorn Computers all contained a built-in relay for controlling an external tape recorder. Toggling the motor control relay in a tight loop would reduce the relay's longevity.

1.5. Commodore Amiga

The floppy drive of the Commodore Amiga personal computer could be made to produce noises of various pitches, by making the drive heads move back and forth. A program existed which could play El CÃ³ndor Pasa, more or less correctly, on the Amiga's floppy drive. As some sounds relied on the head assembly hitting the stop, this gradually sent the head out of alignment. The same problem existed on the Commodore 1541 disk drive made for the Commodore 64.

1.6. LG CD-ROM drives

Certain models of LG CD-ROM drives with specific firmware used an abnormal command for "update firmware": the "clear buffer" command usually used on CD-RW drives. Linux uses this command to tell the difference between CD-ROM and CD-RW drives. Most CD-ROM drives dependably return an error for the unsupported CD-RW command, but the faulty drives interpreted it as "Update Firmware," causing them to cease useful functioning (often casually referenced as the device having been "bricked").

1.7. Game Boy

The Game Boy's LCD screen can be turned off by game software. Doing so outside of the vertical blanking interval can damage the hardware.

2. See also

HCF (Halt and Catch Fire)

Pentium F00F bug

Scratch Monkey

Stuxnet, malware designed to cause physical wear in industrial centrifuges

3. References

4. External links