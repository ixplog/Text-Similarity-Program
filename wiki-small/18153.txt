In logic, a logical connective (also called a logical operator) is a symbol or word used to connect two or more sentences (of either a formal or a natural language) in a grammatically valid way, such that the sense of the compound sentence produced depends only on the original sentences.

The most common logical connectives are binary connectives (also called dyadic connectives) which join two sentences which can be thought of as the function's operands. Also commonly, negation is considered to be a unary connective.

Logical connectives along with quantifiers are the two main types of logical constants used in formal systems such as propositional logic and predicate logic. Semantics of a logical connective is often, but not always, presented as a truth function.

1. In language

1.1. Natural language

In the grammar of natural languages two sentences may be joined by a grammatical conjunction to form a grammatically compound sentence. Some but not all such grammatical conjunctions are truth functions. For example, consider the following sentences:

The words and and so are grammatical conjunctions joining the sentences (A) and (B) to form the compound sentences (C) and (D). The and in (C) is a logical connective, since the truth of (C) is completely determined by (A) and (B): it would make no sense to affirm (A) and (B) but deny (C). However, so in (D) is not a logical connective, since it would be quite reasonable to affirm (A) and (B) but deny (D): perhaps, after all, Jill went up the hill to fetch a pail of water, not because Jack had gone up the hill at all.

Various English words and word pairs express logical connectives, and some of them are synonymous. Examples (with the name of the relationship in parentheses) are:

"and" (conjunction)

"and then" (conjunction)

"and then within" (conjunction)

"or" (disjunction)

"either...or" (exclusive disjunction)

"implies" (implication)

"if...then" (implication)

"if and only if" (equivalence)

"only if" (implication)

"just in case" (biconditional)

"but" (conjunction)

"however" (conjunction)

"not both" (alternative denial)

"neither...nor" (joint denial) The word "not" (negation) and the phrases "it is false that" (negation) and "it is not the case that" (negation) also express a logical connective – even though they are applied to a single statement, and do not connect two statements.

1.2. Formal languages

In formal languages, truth functions are represented by unambiguous symbols. These symbols are called "logical connectives", "logical operators", "propositional operators", or, in classical logic, "truth-functional connectives". See well-formed formula for the rules which allow new well-formed formulas to be constructed by joining other well-formed formulas using truth-functional connectives.

Logical connectives can be used to link more than two statements, so one can speak about "-ary logical connective".

2. Common logical connectives

2.1. List of common logical connectives

Commonly used logical connectives include:

Negation (not): ¬ , Np, ~

Conjunction (and):  , Kpq, &  , ∙

Disjunction (or): , Apq

Material implication (if...then):  , Cpq,  ,

Biconditional (if and only if):  , Epq,  , Alternative names for biconditional are "iff", "xnor" and "bi-implication".

For example, the meaning of the statements it is raining and I am indoors is transformed when the two are combined with logical connectives:

It is not raining (P)

It is raining and I am indoors (P Q)

It is raining or I am indoors (P Q)

If it is raining, then I am indoors (P Q)

If I am indoors, then it is raining (Q P)

I am indoors if and only if it is raining (P Q) For statement P = It is raining and Q = I am indoors.

It is also common to consider the always true formula and the always false formula to be connective:

True formula (⊤, 1, Vpq, or T)

False formula (⊥, 0, Opq, or F)

2.2. History of notations

Negation: the symbol ¬ appeared in Heyting in 1929. (compare to Frege's symbol in his Begriffsschrift); the symbol ~ appeared in Russell in 1908; an alternative notation is to add an horizontal line on top of the formula, as in ; another alternative notation is to use a prime symbol as in P'.

Conjunction: the symbol ∧ appeared in Heyting in 1929 (compare to Peano's use of the set-theoretic notation of intersection ∩); & appeared at least in Schönfinkel in 1924; . comes from Boole's interpretation of logic as an elementary algebra.

Disjunction: the symbol ∨ appeared in Russell in 1908 (compare to Peano's use of the set-theoretic notation of union ∪); the symbol + is also used, in spite of the ambiguity coming from the fact that the + of ordinary elementary algebra is an exclusive or when interpreted logically in a two-element ring; punctually in the history a + together with a dot in the lower right corner has been used by Peirce,

Implication: the symbol → can be seen in Hilbert in 1917; ⊃ was used by Russell in 1908 (compare to Peano's inverted C notation); was used in Vax.

Biconditional: the symbol ≡ was used at least by Russell in 1908; ↔ was used at least by Tarski in 1940; ⇔ was used in Vax; other symbols appeared punctually in the history such as ⊃⊂ in Gentzen, ~ in Schönfinkel or ⊂⊃ in Chazal.

True: the symbol 1 comes from Boole's interpretation of logic as an elementary algebra over the two-element Boolean algebra; other notations include to be found in Peano.

False: the symbol 0 comes also from Boole's interpretation of logic as a ring; other notations include to be found in Peano. Some authors used letters for connectives at some time of the history: u. for conjunction (German's "und" for "and") and o. for disjunction (German's "oder" for "or") in earlier works by Hilbert (1904); Np for negation, Kpq for conjunction, Apq for disjunction, Cpq for implication, Epq for biconditional in Łukasiewicz (1929).

2.3. Redundancy

Such logical connective as converse implication ← is actually the same as material conditional with swapped arguments, so the symbol for converse implication is redundant. In some logical calculi (notably, in classical logic) certain essentially different compound statements are logically equivalent. A less trivial example of a redundancy is the classical equivalence between and . Therefore, a classical-based logical system does not need the conditional operator "→" if "¬" (not) and "∨" (or) are already in use, or may use the "→" only as a syntactic sugar for a compound having one negation and one disjunction.

There are sixteen Boolean functions associating the input truth values and with four-digit binary outputs. These correspond to possible choices of binary logical connectives for classical logic. Different implementation of classical logic can choose different functionally complete subsets of connectives.

One approach is to choose a minimal set, and define other connectives by some logical form, like in the example with material conditional above. The following are the minimal functionally complete sets of operators in classical logic whose arities do not exceed 2: ;One element: {↑}, {↓}. ;Two elements: {, ¬}, {, ¬}, {→, ¬}, {←, ¬}, {→, }, {←, }, {→, }, {←, }, {→, }, {→, }, {←, }, {←, }, {, ¬}, {, ¬}, {, }, {, }, {, }, {, }. ;Three elements: {, , }, {, , }, {, , }, {, , }, {, , }, {, , }. See more details about functional completeness in classical logic at Functional completeness in truth function.

Another approach is to use on equal rights connectives of a certain convenient and functionally complete, but not minimal set. This approach requires more propositional axioms and each equivalence between logical forms must be either an axiom or provable as a theorem.

But intuitionistic logic has the situation more complicated. Of its five connectives {∧, ∨, →, ¬, ⊥} only negation ¬ has to be reduced to other connectives (see details). Neither of conjunction, disjunction and material conditional has an equivalent form constructed of other four logical connectives.

3. Properties

Some logical connectives possess properties which may be expressed in the theorems containing the connective. Some of those properties that a logical connective may have are:

Associativity: Within an expression containing two or more of the same associative connectives in a row, the order of the operations does not matter as long as the sequence of the operands is not changed.

Commutativity: The operands of the connective may be swapped preserving logical equivalence to the original expression.

Distributivity: A connective denoted by · distributes over another connective denoted by +, if for all operands , , .

Idempotence: Whenever the operands of the operation are the same, the compound is logically equivalent to the operand.

Absorption: A pair of connectives , satisfies the absorption law if for all operands , .

Monotonicity: If f(a1, ..., an) ≤ f(b1, ..., bn) for all a1, ..., an, b1, ..., bn ∈ {0,1} such that a1 ≤ b1, a2 ≤ b2, ..., an ≤ bn. E.g., , , , .

Affinity: Each variable always makes a difference in the truth-value of the operation or it never makes a difference. E.g., , , , , .

Duality: To read the truth-value assignments for the operation from top to bottom on its truth table is the same as taking the complement of reading the table of the same or another connective from bottom to top. Without resorting to truth tables it may be formulated as . E.g., .

Truth-preserving: The compound all those argument are tautologies is a tautology itself. E.g., , , , , , ⊂. (see validity)

Falsehood-preserving: The compound all those argument are contradictions is a contradiction itself. E.g., , , , , ⊄, ⊅. (see validity)

Involutivity (for unary connectives): . E.g. negation in classical logic. For classical and intuitionistic logic, the "=" symbol means that corresponding implications "…→…" and "…←…" for logical compounds can be both proved as theorems, and the "≤" symbol means that "…→…" for logical compounds is a consequence of corresponding "…→…" connectives for propositional variables. Some many-valued logics may have incompatible definitions of equivalence and order (entailment).

Both conjunction and disjunction are associative, commutative and idempotent in classical logic, most varieties of many-valued logic and intuitionistic logic. The same is true about distributivity of conjunction over disjunction and disjunction over conjunction, as well as for the absorption law.

In classical logic and some varieties of many-valued logic, conjunction and disjunction are dual, and negation is self-dual, the latter is also self-dual in intuitionistic logic.

4. Order of precedence

As a way of reducing the number of necessary parentheses, one may introduce precedence rules: has higher precedence than , higher than , and higher than . So for example, is short for .

Here is a table that shows a commonly used precedence of logical operators.

|- ! Operator !! Precedence |- | || 1 |- | || 2 |- | || 3 |- | || 4 |- | || 5 |}

The order of precedence determines which connective is the "main connective" when interpreting a non-atomic formula.

5. Computer science

A truth-functional approach to logical operators is implemented as logic gates in digital circuits. Practically all digital circuits (the major exception is DRAM) are built up from NAND, NOR, NOT, and transmission gates; see more details in Truth function in computer science. Logical operators over bit vectors (corresponding to finite Boolean algebras) are bitwise operations.

But not every usage of a logical connective in computer programming has a Boolean semantic. For example, lazy evaluation is sometimes implemented for and , so these connectives are not commutative if some of expressions , has side effects. Also, a conditional, which in some sense corresponds to the material conditional connective, is essentially non-Boolean because for if (P) then Q; the consequent Q is not executed if the antecedent P is false (although a compound as a whole is successful ≈ "true" in such case). This is closer to intuitionist and constructivist views on the material conditional, rather than to classical logic's ones.

6. See also

Boolean domain

Boolean function

Boolean logic

Boolean-valued function

List of Boolean algebra topics

Logical constant

Modal operator

Propositional calculus

Truth function

Truth table

Truth values

7. Notes

8. References

Bocheński, Józef Maria (1959), A Précis of Mathematical Logic, translated from the French and German editions by Otto Bird, D. Reidel, Dordrecht, South Holland.

9. Further reading

10. External links

Lloyd Humberstone (2010), "", Stanford Encyclopedia of Philosophy (An abstract algebraic logic approach to connectives.)

John MacFarlane (2005), "", Stanford Encyclopedia of Philosophy.

da:Logisk konnektiv he:קשר לוגי