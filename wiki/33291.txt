WYSIWYG     is an acronym for  What You See Is What You Get   In computing  a WYSIWYG editor is a system in which content  text and graphics  onscreen during editing appears in a form closely corresponding to its appearance when printed or displayed as a finished product  which might be a printed document  web page  or slide presentation   1  Meaning  WYSIWYG implies a user interface that allows the user to view something very similar to the end result while the document is being created  In general WYSIWYG implies the ability to directly manipulate the layout of a document without having to type or remember names of layout commands  The actual meaning depends on the user s perspective  e g   In presentation programs  compound documents and web pages  WYSIWYG means the display precisely represents the appearance of the page displayed to the end user  but does not necessarily reflect how the page will be printed unless the printer is specifically matched to the editing program  as it was with the Xerox Star and early versions of the Apple Macintosh   In word processing and desktop publishing applications  WYSIWYG means that the display simulates the appearance and represents the effect of fonts and line breaks on the final pagination using a specific printer configuration  so that  for example  a citation on page 1 of a 500 page document can accurately refer to a reference three hundred pages later   WYSIWYG also describes ways to manipulate 3D models in stereo chemistry  computer aided design  and 3D computer graphics  Modern software does a good job of optimizing the screen display for a particular type of output  For example  a word processor is optimized for output to a typical printer  The software often emulates the resolution of the printer in order to get as close as possible to WYSIWYG  However  that is not the main attraction of WYSIWYG  which is the ability of the user to be able to visualize what they are producing   In many situations  the subtle differences between what the user sees and what the user gets are unimportant  In fact  applications may offer multiple WYSIWYG modes with different levels of  realism   including  A composition mode  in which the user sees something somewhat similar to the end result  but with additional information useful while composing  such as section breaks and non printing characters  and uses a layout that is more conducive to composing than to layout   A layout mode  in which the user sees something very similar to the end result  but with some additional information useful in ensuring that elements are properly aligned and spaced  such as margin lines   A preview mode  in which the application attempts to present a representation that is as close to the final result as possible   2  History  Before the adoption of WYSIWYG techniques  text appeared in editors using the system standard typeface and style with little indication of layout  margins  spacing etc    Users were required to enter special non printing control codes  now referred to as markup code tags  to indicate that some text should be in boldface  italics  or a different typeface or size  In this environment there was very little distinction between text editors and word processors   These applications typically used an arbitrary markup language to define the codes tags  Each program had its own special way to format a document  and it was a difficult and time consuming process to change from one word processor to another   The use of markup tags and codes remains popular today in some applications due to their ability to store complex formatting information  When the tags are made visible in the editor  however  they occupy space in the unformatted text and so disrupt the desired layout and flow   Bravo  a document preparation program for the Alto produced at Xerox PARC by Butler Lampson  Charles Simonyi and colleagues in 1974  is generally considered the first program to incorporate WYSIWYG technology  displaying text with formatting  e g  with justification  fonts  and proportional spacing of characters   The Alto monitor  72 PPI  was designed so that one full page of text could be seen and then printed on the first laser printers  When the text was laid out on the screen  72 PPI font metric files were used  but when printed 300 PPI files were used—thus one would occasionally find characters and words slightly off  a problem that continues to this day   72 PPI came from a new measure of 72  PostScript points  per inch  Prior to this  the standard measure of 72 27 points per inch was used in typeface design  graphic design  typesetting and printing    Bravo was never released commercially  but the software eventually included in the Xerox Star can be seen as a direct descendant of it   In parallel with but independent of the work at Xerox PARC  Hewlett Packard developed and released in late 1978 the first commercial WYSIWYG software application for producing overhead slides or what today are called presentation graphics  The first release  named BRUNO  after an HP sales training puppet   ran on the HP 1000 minicomputer taking advantage of HP s first bitmapped computer terminal the HP 2640  BRUNO was then ported to the HP 3000 and re released as  HP Draw    By 1981 MicroPro advertised that its WordStar word processor had WYSIWYG  and in 1983 Weekly Reader advertised its Stickybear educational software with the slogan  What You See Is What You Get   with photographs of its Apple II graphics  In the 1970s and early 1980s  however  most popular home computers lacked the sophisticated graphics capabilities necessary to display WYSIWYG documents  meaning that such applications were usually confined to limited purpose  high end workstations  such as the IBM Displaywriter System  that were too expensive for the general public to afford  Towards the mid 1980s  however  things began to change  Improving technology allowed the production of cheaper bitmapped displays  and WYSIWYG software started to appear for more popular computers  including LisaWrite for the Apple Lisa  released in 1983  and MacWrite for the Apple Macintosh  released in 1984   The Apple Macintosh system was originally designed so that the screen resolution and the resolution of the ImageWriter dot matrix printers sold by Apple were easily scaled  72 PPI for the screen and 144 DPI for the printers  Thus  the scale and dimensions of the on screen display in programs such as MacWrite and MacPaint were easily translated to the printed output—if the paper were held up to the screen  the printed image would be the same size as the on screen image  but at a higher resolution  As the ImageWriter was the only model of printer physically compatible with the Macintosh printer port  this created an effective  closed system  Later  when Macs using external displays became available  the resolution was fixed to the size of the screen to achieve 72 DPI  These resolutions often differed from the VGA standard resolutions common in the PC world at the time  Thus  while a Macintosh 14  monitor had the same 640x480 resolution as a PC  a 16  screen would be fixed at 832x624 rather than the 800x600 resolution used by PCs  With the introduction of third party dot matrix printers as well as laser printers and multisync monitors  resolutions deviated from even multiples of the screen resolution  making true WYSIWYG harder to achieve   In 2012  Wikipedia offered a WYSIWYG editor called VisualEditor  which allowed edits to Wikipedia to be performed without seeing the page source   2 1  Etymology  The phrase  What you see is what you get   from which the acronym derives  was a catchphrase popularized by Flip Wilson s drag persona Geraldine  first appearing in September 1969  then regularly in the early  70s on The Flip Wilson Show  The phrase was a statement demanding acceptance of Geraldine s entire personality and appearance   As it relates to computing  there are multiple claims to first use of the phrase   The phrase was coined in 1982 by Larry Sinclair  an engineer at Triple I  Information International  Inc    to express the idea that what the user sees on the screen is what the user gets on the printer while using the  page layout system   a pre press typesetting system first shown at ANPS in Las Vegas   John W  Seybold  Seybold publications founder  and researchers at PARC were simply reappropriating the popular cultural reference   The phrase was popularised by a newsletter published by Arlene and Jose Ramos  called WYSIWYG  It was created for the emerging Pre Press industry going electronic in the late 1970s  After three years of publishing  the newsletter was sold to employees at the Stanford Research Institute in California   3  Problems of implementation  Because designers of WYSIWYG applications typically have to account for a variety of different output devices  each of which has different capabilities  there are a number of problems that must be solved in each implementation  These can be seen as tradeoffs between multiple design goals  and hence applications that use different solutions may be suitable for different purposes   Typically  the design goals of a WYSIWYG application may include the following   Provide high quality printed output on a particular printer  Provide high quality printed output on a variety of printers  Provide high quality on screen output  Allow the user to visualize what the document will look like when printed It is not usually possible to achieve all of these goals at once   The major problem to be overcome is that of varying output resolution  As of 2007  monitors typically have a resolution of between 92 and 125 pixels per inch  Printers generally have resolutions between 240 and 1440 pixels per inch  in some printers the horizontal resolution is different from the vertical  This becomes a problem when trying to lay out text  because older output technologies require the spacing between characters to be a whole number of pixels  rounding errors will cause the same text to require different amounts of space in different resolutions   Solutions to this include the following   Always laying out the text using a resolution higher than the user is likely to use in practice  This can result in poor quality output for lower resolution devices  although techniques such as spatial anti aliasing may help mitigate this   but provides a fixed layout  allowing easy user visualisation  This is the method used by Adobe Acrobat   Laying out the text at the resolution of the printer on which the document will be printed  This can result in low quality on screen output  and the layout may sometimes change if the document is printed on a different printer  although this problem occurs less frequently with higher resolution printers  as rounding errors are smaller   This is the method used by Microsoft Word   Laying out the text at the resolution of a specific printer  in most cases the default one  on which the document will be printed using the same font information and kerning  The character positions and number of characters in a line are exactly similar to the printed document   Laying out the text at the resolution for the output device to which it will be sent  This often results in changes in layout between the on screen display and printed output  so is rarely used  It is common in web page designing tools that claim to be WYSIWYG  however  Other problems that have been faced in the past include differences in the fonts used by the printer and the on screen display  largely solved by the use of downloadable font technologies like TrueType  and differences in color profiles between devices  mostly solved by printer drivers with good color model conversion software    4  Related acronyms  Many variations are used only to illustrate a point or make a joke  and have very limited real use  Some that have been proposed include the following   WYSIMOLWYG  what you see is more or less what you get  recognizing that most WYSIWYG implementations are imperfect   WYSIAWYG  what you see is almost what you get  similar to WYSIMOLWYG   WYSIAYG  what you see is all you get  used to point out that advanced users are sometimes limited by the user interface   WYSIWYM  what you see is what you mean  The user sees what best conveys the message    WYCIWYG  what you cache is what you get   wyciwyg     turns up occasionally in the address bar of Gecko based Web browsers such as Mozilla Firefox when the browser is retrieving cached information  Unauthorized access to wyciwyg    documents was fixed by Mozilla in Firefox version 2 0 0 5   WYGIWYS  what you get is what you see  used in computing to describe an interaction paradigm in results oriented user interface  The term was used by Jakob Nielsen to describe Microsoft Office 2007 s  Ribbon  interface  WYSIWYN  what you see is what you need relates to Software  which is not composed through the interconnection of modules  but work with such a detailed user and rights management  that users can see only what they really need   WYSYHYG  what you see you hope you get     a term ridiculing text mode word processing software  used in the Microsoft Windows video collection  a video distributed around 1991 on two VHS cassettes at promotional events   WYSIPWYG  what you see is probably what you get  relates to html and markup editors where code and macro tags sort of show what the result will eventually be  This type of WYSIWYG view is hard to render while editing so the user can only guess at the outcome   WYSIWYS  what you see is what you sign  an important requirement for digital signature software  It means that the software has to be able to show the user the content without any hidden content before the user signs it   WYSIWYD  what you see is what you deserve refers to the ability of the user and – of course – his effort to create something worthwhile   WYSIWYW  what you see is what you want  used to describe GNU TeXmacs editing platform  The abbreviation clarifies that unlike in WYSIWYG editors  the user is able to customize WYSIWYW platforms to partly act as manual typesetting programs such as TeX or troff   YAFIYGI  you asked for it you got it  used to describe a text command oriented document editing system that does not include WYSIWYG  in reference to the fact that users of such systems often ask for something they did not really want  It is considered to be the opposite of WYSIWYG  The phrase was first used in this context in 1983 in the essay Real Programmers Don t Use Pascal to describe the TECO text editor system  and began to be abbreviated circa 1993   WISIWIT  what I see is what I type  also used to describe text oriented editing systems in the opposite sense of WYSIWYG   5  See also  Comparison of HTML editors  Does exactly what it says on the tin  Plain text  Tableless web design  List of HTML editors  6  References  7  External links  – Critical paper about the negative effects the introduction of WYSIWYG has had as of 1996   An article on existing XML authoring software  May 2005   ATPM com s